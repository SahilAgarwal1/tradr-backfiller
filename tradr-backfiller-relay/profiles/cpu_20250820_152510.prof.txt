File: relay
Build ID: 3852b42dde11ca38ea39ff1db2bf0f6ba155cfc1
Type: cpu
Time: 2025-08-20 15:25:18 EDT
Duration: 30.14s, Total samples = 32.57s (108.05%)
Showing nodes accounting for 25.53s, 78.39% of 32.57s total
Dropped 926 nodes (cum <= 0.16s)
      flat  flat%   sum%        cum   cum%
     4.23s 12.99% 12.99%      4.23s 12.99%  runtime.memclrNoHeapPointers
     3.40s 10.44% 23.43%      3.40s 10.44%  internal/runtime/syscall.Syscall6
     2.26s  6.94% 30.37%      3.88s 11.91%  compress/flate.(*decompressor).huffSym
     1.56s  4.79% 35.16%      1.56s  4.79%  runtime.memmove
     1.44s  4.42% 39.58%      2.13s  6.54%  runtime.greyobject
     1.24s  3.81% 43.38%      5.28s 16.21%  runtime.scanobject
     0.99s  3.04% 46.42%      5.52s 16.95%  compress/flate.(*decompressor).huffmanBlock
     0.77s  2.36% 48.79%      0.77s  2.36%  runtime.futex
     0.64s  1.96% 50.75%      0.64s  1.96%  crypto/internal/fips140/sha256.blockSHA2
     0.62s  1.90% 52.66%      1.84s  5.65%  bufio.(*Reader).ReadByte
     0.59s  1.81% 54.47%      0.63s  1.93%  runtime.(*mspan).heapBitsSmallForAddr
     0.52s  1.60% 56.06%      5.81s 17.84%  runtime.gcDrain
     0.51s  1.57% 57.63%      4.03s 12.37%  runtime.mallocgcSmallNoscan
     0.47s  1.44% 59.07%      0.81s  2.49%  runtime.findObject
     0.43s  1.32% 60.39%      0.44s  1.35%  runtime.(*gcBits).bytep (inline)
     0.33s  1.01% 61.41%      0.33s  1.01%  aeshashbody
     0.29s  0.89% 62.30%      0.29s  0.89%  runtime.(*mspan).base (inline)
     0.29s  0.89% 63.19%      1.91s  5.86%  runtime.mallocgcSmallScanNoHeader
     0.27s  0.83% 64.02%      0.27s  0.83%  time.now
     0.24s  0.74% 64.75%      1.83s  5.62%  runtime.mapassign_faststr
     0.22s  0.68% 65.43%      7.71s 23.67%  bufio.(*Reader).Read
     0.21s  0.64% 66.07%      0.21s  0.64%  bytes.(*Reader).ReadByte (partial-inline)
     0.20s  0.61% 66.69%      0.29s  0.89%  internal/runtime/maps.(*table).uncheckedPutSlot
     0.19s  0.58% 67.27%      0.19s  0.58%  runtime.nanotime (inline)
     0.18s  0.55% 67.82%      0.18s  0.55%  runtime.memequal
     0.18s  0.55% 68.38%      0.18s  0.55%  runtime.typePointers.next
     0.16s  0.49% 68.87%      0.17s  0.52%  runtime.nextFreeFast (inline)
     0.15s  0.46% 69.33%      0.31s  0.95%  runtime.heapSetTypeNoHeader (inline)
     0.15s  0.46% 69.79%      6.90s 21.19%  runtime.mallocgc
     0.12s  0.37% 70.16%      0.21s  0.64%  compress/flate.(*dictDecoder).tryWriteCopy (inline)
     0.11s  0.34% 70.49%      0.72s  2.21%  crypto/internal/fips140/sha256.(*Digest).Sum
     0.11s  0.34% 70.83%      0.97s  2.98%  runtime.(*mcentral).cacheSpan
     0.10s  0.31% 71.14%      0.44s  1.35%  crypto/internal/fips140/sha256.(*Digest).checkSum
     0.10s  0.31% 71.45%      3.66s 11.24%  runtime.makeslice
     0.09s  0.28% 71.72%      0.31s  0.95%  compress/flate.(*huffmanDecoder).init
     0.09s  0.28% 72.00%      0.18s  0.55%  encoding/binary.ReadUvarint
     0.09s  0.28% 72.28%      0.24s  0.74%  github.com/multiformats/go-varint.ReadUvarint
     0.08s  0.25% 72.52%      0.50s  1.54%  golang.org/x/crypto/pbkdf2.Key
     0.08s  0.25% 72.77%      8.08s 24.81%  io.ReadAtLeast
     0.07s  0.21% 72.98%      0.25s  0.77%  runtime.(*mheap).allocSpan
     0.07s  0.21% 73.20%      0.71s  2.18%  runtime.(*mspan).typePointersOfUnchecked
     0.06s  0.18% 73.38%      1.16s  3.56%  internal/runtime/maps.(*table).split
     0.06s  0.18% 73.56%      0.18s  0.55%  runtime.mapaccess2_faststr
     0.05s  0.15% 73.72%      0.76s  2.33%  crypto/internal/fips140/sha256.(*Digest).Write
     0.05s  0.15% 73.87%      0.69s  2.12%  crypto/internal/fips140/sha256.block
     0.04s  0.12% 73.99%      0.22s  0.68%  bufio.(*Reader).Peek
     0.04s  0.12% 74.12%      0.18s  0.55%  compress/flate.(*decompressor).moreBits
     0.04s  0.12% 74.24%      1.79s  5.50%  github.com/bluesky-social/indigo/atproto/repo.(*TinyBlockstore).Put
     0.04s  0.12% 74.36%      2.68s  8.23%  github.com/bluesky-social/indigo/backfill.(*Backfiller).BackfillRepo.func2
     0.04s  0.12% 74.49%     15.85s 48.66%  github.com/bluesky-social/indigo/repo.IngestRepo
     0.04s  0.12% 74.61%      0.32s  0.98%  github.com/ipfs/go-block-format.NewBlockWithCid
     0.04s  0.12% 74.73%      0.36s  1.11%  github.com/ipfs/go-cid.NewCidV1
     0.04s  0.12% 74.85%      6.23s 19.13%  net/http.(*cancelTimerBody).Read
     0.04s  0.12% 74.98%      0.45s  1.38%  runtime.slicebytetostring
     0.04s  0.12% 75.10%         3s  9.21%  syscall.Syscall
     0.03s 0.092% 75.19%      0.38s  1.17%  compress/flate.(*decompressor).readHuffman
     0.03s 0.092% 75.28%      6.16s 18.91%  compress/gzip.(*Reader).Read
     0.03s 0.092% 75.38%      1.26s  3.87%  github.com/ipfs/go-cid.CidFromReader
     0.03s 0.092% 75.47%     11.23s 34.48%  github.com/ipld/go-car/util.ReadNode
     0.03s 0.092% 75.56%      0.73s  2.24%  github.com/multiformats/go-multihash.encodeHash
     0.03s 0.092% 75.65%      0.22s  0.68%  github.com/whyrusleeping/cbor-gen.CborReadHeaderBuf
     0.03s 0.092% 75.74%      0.18s  0.55%  github.com/whyrusleeping/cbor-gen.readByteBuf
     0.03s 0.092% 75.84%      0.25s  0.77%  runtime.growslice
     0.03s 0.092% 75.93%      0.55s  1.69%  runtime.netpoll
     0.02s 0.061% 75.99%      6.01s 18.45%  compress/flate.(*decompressor).Read
     0.02s 0.061% 76.05%      0.40s  1.23%  crypto/internal/fips140/hmac.(*HMAC).Sum
     0.02s 0.061% 76.11%      0.22s  0.68%  database/sql.(*Tx).Commit.func1
     0.02s 0.061% 76.17%      2.62s  8.04%  github.com/bluesky-social/indigo/backfill.(*Backfiller).BufferOps
     0.02s 0.061% 76.24%      6.25s 19.19%  github.com/bluesky-social/indigo/backfill.instrumentedReader.Read
     0.02s 0.061% 76.30%     13.77s 42.28%  github.com/ipld/go-car.(*CarReader).Next
     0.02s 0.061% 76.36%      9.38s 28.80%  github.com/ipld/go-car/util.LdRead
     0.02s 0.061% 76.42%      0.32s  0.98%  github.com/multiformats/go-multihash.Encode
     0.02s 0.061% 76.48%      0.24s  0.74%  github.com/whyrusleeping/cbor-gen.(*CborReader).ReadHeader (inline)
     0.02s 0.061% 76.54%      0.18s  0.55%  google.golang.org/protobuf/internal/impl.(*MessageInfo).sizePointer
     0.02s 0.061% 76.60%      7.87s 24.16%  io.ReadFull (inline)
     0.02s 0.061% 76.67%      6.18s 18.97%  net/http.(*http2gzipReader).Read
     0.02s 0.061% 76.73%      0.45s  1.38%  runtime.(*gcBits).bitp (inline)
     0.02s 0.061% 76.79%      1.10s  3.38%  runtime.(*mcache).nextFree
     0.02s 0.061% 76.85%      0.27s  0.83%  runtime.(*mheap).alloc
     0.02s 0.061% 76.91%      1.58s  4.85%  runtime.findRunnable
     0.02s 0.061% 76.97%      0.27s  0.83%  runtime.injectglist
     0.02s 0.061% 77.03%      0.35s  1.07%  runtime.notesleep
     0.02s 0.061% 77.10%      1.70s  5.22%  runtime.schedule
     0.01s 0.031% 77.13%      1.40s  4.30%  bufio.(*Reader).fill
     0.01s 0.031% 77.16%      0.55s  1.69%  crypto/sha256.New
     0.01s 0.031% 77.19%      0.84s  2.58%  crypto/tls.(*Conn).Read
     0.01s 0.031% 77.22%      1.04s  3.19%  crypto/tls.(*Conn).write
     0.01s 0.031% 77.25%      1.13s  3.47%  crypto/tls.(*Conn).writeRecordLocked
     0.01s 0.031% 77.28%      0.17s  0.52%  database/sql.ctxDriverBegin
     0.01s 0.031% 77.31%      1.56s  4.79%  github.com/bluesky-social/indigo/backfill.(*Gormstore).loadJob
     0.01s 0.031% 77.34%      0.78s  2.39%  github.com/bluesky-social/indigo/mst.(*MerkleSearchTree).findGtOrEqualLeafIndex
     0.01s 0.031% 77.37%      0.30s  0.92%  github.com/bluesky-social/indigo/mst.(*TreeEntry).UnmarshalCBOR
     0.01s 0.031% 77.40%      0.17s  0.52%  github.com/bluesky-social/indigo/mst.deserializeNodeData
     0.01s 0.031% 77.43%      0.20s  0.61%  github.com/ipfs/go-cid.Cid.String
     0.01s 0.031% 77.46%      2.10s  6.45%  github.com/ipfs/go-cid.Prefix.Sum
     0.01s 0.031% 77.49%      0.32s  0.98%  github.com/ipfs/go-cid.toBufByteReader (inline)
     0.01s 0.031% 77.53%      0.21s  0.64%  github.com/ipld/go-car.NewCarReader
     0.01s 0.031% 77.56%      0.75s  2.30%  github.com/jackc/pgx/v5.(*Conn).Query
     0.01s 0.031% 77.59%      0.78s  2.39%  github.com/jackc/pgx/v5/pgconn.(*PgConn).flushWithPotentialWriteReadDeadlock
     0.01s 0.031% 77.62%      0.21s  0.64%  github.com/jackc/pgx/v5/pgproto3.(*Frontend).Receive
     0.01s 0.031% 77.65%      0.20s  0.61%  github.com/jackc/pgx/v5/pgproto3.(*chunkReader).Next
     0.01s 0.031% 77.68%      1.73s  5.31%  github.com/multiformats/go-multihash.Sum
     0.01s 0.031% 77.71%      0.58s  1.78%  github.com/multiformats/go-multihash/core.GetVariableHasher
     0.01s 0.031% 77.74%      0.18s  0.55%  github.com/prometheus/client_golang/prometheus.(*CounterVec).WithLabelValues
     0.01s 0.031% 77.77%      0.21s  0.64%  github.com/prometheus/client_golang/prometheus.(*MetricVec).GetMetricWithLabelValues
     0.01s 0.031% 77.80%      6.19s 19.01%  go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp.(*wrappedBody).Read
     0.01s 0.031% 77.83%      1.26s  3.87%  google.golang.org/grpc.(*serverStream).SendMsg
     0.01s 0.031% 77.86%      1.05s  3.22%  google.golang.org/grpc.prepareMsg
     0.01s 0.031% 77.89%      0.98s  3.01%  google.golang.org/grpc/encoding/proto.(*codecV2).Marshal
     0.01s 0.031% 77.92%      0.17s  0.52%  google.golang.org/protobuf/internal/impl.appendBytesNoZero
     0.01s 0.031% 77.96%      1.55s  4.76%  gorm.io/gorm.(*DB).Find
     0.01s 0.031% 77.99%      0.24s  0.74%  gorm.io/gorm/callbacks.CommitOrRollbackTransaction
     0.01s 0.031% 78.02%      0.88s  2.70%  internal/poll.(*FD).Read
     0.01s 0.031% 78.05%      2.11s  6.48%  internal/poll.(*FD).Write
     0.01s 0.031% 78.08%      0.55s  1.69%  internal/runtime/maps.(*table).reset
     0.01s 0.031% 78.11%      0.17s  0.52%  internal/sync.(*Mutex).Lock (inline)
     0.01s 0.031% 78.14%      1.15s  3.53%  net/http.http2stickyErrWriter.Write
     0.01s 0.031% 78.17%      1.17s  3.59%  net/http.http2transportResponseBody.Read
     0.01s 0.031% 78.20%      1.77s  5.43%  runtime.mcall
     0.01s 0.031% 78.23%      0.39s  1.20%  runtime.notewakeup
     0.01s 0.031% 78.26%      0.38s  1.17%  runtime.stopm
     0.01s 0.031% 78.29%      6.55s 20.11%  runtime.systemstack
     0.01s 0.031% 78.32%      0.28s  0.86%  time.Now
     0.01s 0.031% 78.35%      1.52s  4.67%  tradr-backfiller-relay/grpc.(*Server).Broadcast
     0.01s 0.031% 78.39%      0.17s  0.52%  tradr-backfiller-relay/grpc.(*Server).StreamOperations.func2
         0     0% 78.39%      1.19s  3.65%  bufio.(*Writer).Flush
         0     0% 78.39%      0.66s  2.03%  bytes.(*Buffer).ReadFrom
         0     0% 78.39%      0.61s  1.87%  bytes.NewReader (inline)
         0     0% 78.39%      2.24s  6.88%  compress/flate.(*decompressor).nextBlock
         0     0% 78.39%      0.54s  1.66%  crypto/internal/fips140/sha256.New (inline)
         0     0% 78.39%      1.14s  3.50%  crypto/tls.(*Conn).Write
         0     0% 78.39%      0.69s  2.12%  crypto/tls.(*Conn).readFromUntil
         0     0% 78.39%      0.80s  2.46%  crypto/tls.(*Conn).readRecord (inline)
         0     0% 78.39%      0.80s  2.46%  crypto/tls.(*Conn).readRecordOrCCS
         0     0% 78.39%      0.66s  2.03%  crypto/tls.(*atLeastReader).Read
         0     0% 78.39%      0.24s  0.74%  database/sql.(*DB).BeginTx
         0     0% 78.39%      0.24s  0.74%  database/sql.(*DB).BeginTx.func1
         0     0% 78.39%      1.23s  3.78%  database/sql.(*DB).QueryContext
         0     0% 78.39%      1.23s  3.78%  database/sql.(*DB).QueryContext.func1
         0     0% 78.39%      0.24s  0.74%  database/sql.(*DB).begin
         0     0% 78.39%      0.18s  0.55%  database/sql.(*DB).beginDC
         0     0% 78.39%      0.17s  0.52%  database/sql.(*DB).beginDC.func1
         0     0% 78.39%      0.83s  2.55%  database/sql.(*DB).conn
         0     0% 78.39%      1.23s  3.78%  database/sql.(*DB).query
         0     0% 78.39%      0.77s  2.36%  database/sql.(*DB).queryDC
         0     0% 78.39%      0.76s  2.33%  database/sql.(*DB).queryDC.func1
         0     0% 78.39%      1.47s  4.51%  database/sql.(*DB).retry
         0     0% 78.39%      0.23s  0.71%  database/sql.(*Tx).Commit
         0     0% 78.39%      0.31s  0.95%  database/sql.(*Tx).QueryContext
         0     0% 78.39%      0.76s  2.33%  database/sql.ctxDriverQuery
         0     0% 78.39%      1.23s  3.78%  database/sql.withLock
         0     0% 78.39%      0.30s  0.92%  github.com/bluesky-social/indigo/api/atproto.(*SyncSubscribeRepos_Commit).UnmarshalCBOR
         0     0% 78.39%     15.17s 46.58%  github.com/bluesky-social/indigo/backfill.(*Backfiller).BackfillRepo
         0     0% 78.39%      0.80s  2.46%  github.com/bluesky-social/indigo/backfill.(*Backfiller).BackfillRepo.func1
         0     0% 78.39%      3.59s 11.02%  github.com/bluesky-social/indigo/backfill.(*Backfiller).HandleEvent
         0     0% 78.39%     15.17s 46.58%  github.com/bluesky-social/indigo/backfill.(*Backfiller).Start.func1
         0     0% 78.39%     15.05s 46.21%  github.com/bluesky-social/indigo/backfill.(*Backfiller).fetchRepo
         0     0% 78.39%      1.40s  4.30%  github.com/bluesky-social/indigo/backfill.(*Gormstore).EnqueueJob
         0     0% 78.39%      1.16s  3.56%  github.com/bluesky-social/indigo/backfill.(*Gormstore).GetJob
         0     0% 78.39%      1.40s  4.30%  github.com/bluesky-social/indigo/backfill.(*Gormstore).GetOrCreateJob
         0     0% 78.39%         1s  3.07%  github.com/bluesky-social/indigo/backfill.(*Gormstore).createJobForRepo
         0     0% 78.39%      1.56s  4.79%  github.com/bluesky-social/indigo/backfill.(*Gormstore).getJob
         0     0% 78.39%      3.63s 11.15%  github.com/bluesky-social/indigo/events.(*RepoStreamCallbacks).EventHandler
         0     0% 78.39%      0.54s  1.66%  github.com/bluesky-social/indigo/events.HandleRepoStream
         0     0% 78.39%      3.63s 11.15%  github.com/bluesky-social/indigo/events/schedulers/autoscaling.(*Scheduler).worker
         0     0% 78.39%      0.80s  2.46%  github.com/bluesky-social/indigo/mst.(*MerkleSearchTree).WalkLeavesFrom
         0     0% 78.39%      0.77s  2.36%  github.com/bluesky-social/indigo/mst.(*MerkleSearchTree).getEntries
         0     0% 78.39%      0.53s  1.63%  github.com/bluesky-social/indigo/mst.(*NodeData).UnmarshalCBOR
         0     0% 78.39%      0.19s  0.58%  github.com/bluesky-social/indigo/mst.entriesFromNodeData
         0     0% 78.39%      0.80s  2.46%  github.com/bluesky-social/indigo/repo.(*Repo).ForEach
         0     0% 78.39%     15.93s 48.91%  github.com/bluesky-social/indigo/repo.ReadRepoFromCar
         0     0% 78.39%      0.57s  1.75%  github.com/ipfs/go-ipld-cbor.(*BasicIpldStore).Get
         0     0% 78.39%      0.54s  1.66%  github.com/ipfs/go-ipld-cbor.(*BasicIpldStore).decode
         0     0% 78.39%      0.18s  0.55%  github.com/ipld/go-car.ReadHeader
         0     0% 78.39%      0.35s  1.07%  github.com/jackc/pgx/v5.(*Conn).Exec
         0     0% 78.39%      0.35s  1.07%  github.com/jackc/pgx/v5.(*Conn).exec
         0     0% 78.39%      0.35s  1.07%  github.com/jackc/pgx/v5.(*Conn).execSimpleProtocol
         0     0% 78.39%      0.20s  0.61%  github.com/jackc/pgx/v5.(*dbTx).Commit
         0     0% 78.39%      0.78s  2.39%  github.com/jackc/pgx/v5.ConnectConfig
         0     0% 78.39%      0.78s  2.39%  github.com/jackc/pgx/v5.connect
         0     0% 78.39%      0.33s  1.01%  github.com/jackc/pgx/v5/pgconn.(*PgConn).Exec
         0     0% 78.39%      0.55s  1.69%  github.com/jackc/pgx/v5/pgconn.(*PgConn).ExecPrepared
         0     0% 78.39%      0.54s  1.66%  github.com/jackc/pgx/v5/pgconn.(*PgConn).execExtendedSuffix
         0     0% 78.39%      0.21s  0.64%  github.com/jackc/pgx/v5/pgconn.(*PgConn).peekMessage
         0     0% 78.39%      0.58s  1.78%  github.com/jackc/pgx/v5/pgconn.(*PgConn).scramAuth
         0     0% 78.39%      0.18s  0.55%  github.com/jackc/pgx/v5/pgconn.(*ResultReader).readUntilRowDescription
         0     0% 78.39%      0.52s  1.60%  github.com/jackc/pgx/v5/pgconn.(*scramClient).clientFinalMessage
         0     0% 78.39%      0.77s  2.36%  github.com/jackc/pgx/v5/pgconn.ConnectConfig
         0     0% 78.39%      0.73s  2.24%  github.com/jackc/pgx/v5/pgconn.connectOne
         0     0% 78.39%      0.73s  2.24%  github.com/jackc/pgx/v5/pgconn.connectPreferred
         0     0% 78.39%      0.19s  0.58%  github.com/jackc/pgx/v5/pgconn/internal/bgreader.(*BGReader).Read
         0     0% 78.39%      0.73s  2.24%  github.com/jackc/pgx/v5/pgproto3.(*Frontend).Flush
         0     0% 78.39%      0.76s  2.33%  github.com/jackc/pgx/v5/stdlib.(*Conn).QueryContext
         0     0% 78.39%      0.78s  2.39%  github.com/jackc/pgx/v5/stdlib.connector.Connect
         0     0% 78.39%      0.20s  0.61%  github.com/jackc/pgx/v5/stdlib.wrapTx.Commit
         0     0% 78.39%      0.19s  0.58%  github.com/multiformats/go-multibase.Encode
         0     0% 78.39%      0.54s  1.66%  github.com/multiformats/go-multihash/core.Register.func1
         0     0% 78.39%      0.17s  0.52%  github.com/prometheus/client_golang/prometheus.(*CounterVec).GetMetricWithLabelValues (inline)
         0     0% 78.39%      0.22s  0.68%  github.com/whyrusleeping/cbor-gen.ReadCid
         0     0% 78.39%      1.26s  3.87%  google.golang.org/grpc.(*GenericServerStream[go.shape.struct { tradr-backfiller-relay/proto.state google.golang.org/protobuf/internal/impl.MessageState "protogen:\"open.v1\""; Success bool "protobuf:\"varint,1,opt,name=success,proto3\" json:\"success,omitempty\""; Error string "protobuf:\"bytes,2,opt,name=error,proto3\" json:\"error,omitempty\""; Seq int64 "protobuf:\"varint,3,opt,name=seq,proto3\" json:\"seq,omitempty\""; tradr-backfiller-relay/proto.unknownFields []uint8; tradr-backfiller-relay/proto.sizeCache int32 },go.shape.f97f10f8f845d32145ca4ef87671400b4f1b17eaffedd95c739c7abfaf853db8]).Send
         0     0% 78.39%         1s  3.07%  google.golang.org/grpc.encode
         0     0% 78.39%      0.19s  0.58%  google.golang.org/grpc/internal/transport.(*ServerStream).Write (inline)
         0     0% 78.39%      0.18s  0.55%  google.golang.org/grpc/internal/transport.(*bufWriter).Flush
         0     0% 78.39%      0.26s   0.8%  google.golang.org/grpc/internal/transport.(*bufWriter).flushKeepBuffer
         0     0% 78.39%      0.19s  0.58%  google.golang.org/grpc/internal/transport.(*http2Server).write
         0     0% 78.39%      0.18s  0.55%  google.golang.org/grpc/internal/transport.(*loopyWriter).processData
         0     0% 78.39%      0.41s  1.26%  google.golang.org/grpc/internal/transport.(*loopyWriter).run
         0     0% 78.39%      0.41s  1.26%  google.golang.org/grpc/internal/transport.NewServerTransport.func3
         0     0% 78.39%      0.28s  0.86%  google.golang.org/protobuf/internal/impl.(*MessageInfo).initOneofFieldCoders.func4
         0     0% 78.39%      0.35s  1.07%  google.golang.org/protobuf/internal/impl.(*MessageInfo).marshal
         0     0% 78.39%      0.35s  1.07%  google.golang.org/protobuf/internal/impl.(*MessageInfo).marshalAppendPointer
         0     0% 78.39%      0.17s  0.52%  google.golang.org/protobuf/internal/impl.(*MessageInfo).size
         0     0% 78.39%      0.23s  0.71%  google.golang.org/protobuf/internal/impl.appendMessageInfo
         0     0% 78.39%      0.72s  2.21%  google.golang.org/protobuf/proto.Marshal
         0     0% 78.39%      0.72s  2.21%  google.golang.org/protobuf/proto.MarshalOptions.marshal
         0     0% 78.39%      0.28s  0.86%  gorm.io/gorm.(*DB).Begin
         0     0% 78.39%      0.23s  0.71%  gorm.io/gorm.(*DB).Commit
         0     0% 78.39%      0.95s  2.92%  gorm.io/gorm.(*DB).Create
         0     0% 78.39%      2.53s  7.77%  gorm.io/gorm.(*processor).Execute
         0     0% 78.39%      0.32s  0.98%  gorm.io/gorm/callbacks.BeginTransaction
         0     0% 78.39%      1.50s  4.61%  gorm.io/gorm/callbacks.Query
         0     0% 78.39%      0.45s  1.38%  gorm.io/gorm/callbacks.RegisterDefaultCallbacks.Create.func3
         0     0% 78.39%      2.89s  8.87%  internal/poll.ignoringEINTRIO (inline)
         0     0% 78.39%      1.18s  3.62%  internal/runtime/maps.(*table).rehash
         0     0% 78.39%      0.50s  1.54%  internal/runtime/maps.newGroups (inline)
         0     0% 78.39%      0.58s  1.78%  internal/runtime/maps.newTable
         0     0% 78.39%      0.50s  1.54%  internal/runtime/maps.newarray
         0     0% 78.39%      0.50s  1.54%  internal/runtime/syscall.EpollWait
         0     0% 78.39%      0.54s  1.66%  main.main.func4
         0     0% 78.39%      0.23s  0.71%  net.(*Dialer).DialContext
         0     0% 78.39%      0.23s  0.71%  net.(*Resolver).exchange
         0     0% 78.39%      0.24s  0.74%  net.(*Resolver).goLookupIPCNAMEOrder.func3.1
         0     0% 78.39%      0.24s  0.74%  net.(*Resolver).tryOneName
         0     0% 78.39%      0.88s  2.70%  net.(*conn).Read
         0     0% 78.39%      2.09s  6.42%  net.(*conn).Write
         0     0% 78.39%      0.88s  2.70%  net.(*netFD).Read
         0     0% 78.39%      2.09s  6.42%  net.(*netFD).Write
         0     0% 78.39%      0.20s  0.61%  net.(*sysDialer).dialParallel
         0     0% 78.39%      0.20s  0.61%  net.(*sysDialer).dialSerial
         0     0% 78.39%      0.19s  0.58%  net.(*sysDialer).dialSingle
         0     0% 78.39%      0.17s  0.52%  net.internetSocket
         0     0% 78.39%      0.86s  2.64%  net/http.(*http2ClientConn).readLoop
         0     0% 78.39%      0.75s  2.30%  net/http.(*http2Framer).ReadFrame
         0     0% 78.39%      0.86s  2.64%  net/http.(*http2clientConnReadLoop).run
         0     0% 78.39%      0.66s  2.03%  net/http.http2readFrameHeader
         0     0% 78.39%      1.14s  3.50%  net/http.http2writeWithByteTimeout
         0     0% 78.39%      1.05s  3.22%  runtime.(*mcache).refill
         0     0% 78.39%      0.74s  2.27%  runtime.(*mcentral).grow
         0     0% 78.39%      0.25s  0.77%  runtime.(*mheap).alloc.func1
         0     0% 78.39%      0.47s  1.44%  runtime.(*mspan).initHeapBits
         0     0% 78.39%      0.45s  1.38%  runtime.(*mspan).markBitsForIndex (inline)
         0     0% 78.39%      0.34s  1.04%  runtime.futexsleep
         0     0% 78.39%      0.43s  1.32%  runtime.futexwakeup
         0     0% 78.39%      5.81s 17.84%  runtime.gcBgMarkWorker
         0     0% 78.39%      5.81s 17.84%  runtime.gcBgMarkWorker.func2
         0     0% 78.39%      2.50s  7.68%  runtime.gcDrainMarkWorkerDedicated (inline)
         0     0% 78.39%      3.31s 10.16%  runtime.gcDrainMarkWorkerIdle (inline)
         0     0% 78.39%      0.17s  0.52%  runtime.injectglist.func1
         0     0% 78.39%      0.35s  1.07%  runtime.mPark (inline)
         0     0% 78.39%      0.45s  1.38%  runtime.mallocgcLarge
         0     0% 78.39%      0.44s  1.35%  runtime.memclrNoHeapPointersChunked
         0     0% 78.39%      0.50s  1.54%  runtime.newarray
         0     0% 78.39%      2.35s  7.22%  runtime.newobject
         0     0% 78.39%      1.62s  4.97%  runtime.park_m
         0     0% 78.39%      0.36s  1.11%  runtime.startm
         0     0% 78.39%      0.20s  0.61%  runtime.wakep
         0     0% 78.39%      0.17s  0.52%  sync.(*Mutex).Lock (inline)
         0     0% 78.39%      2.85s  8.75%  syscall.RawSyscall6
         0     0% 78.39%      0.80s  2.46%  syscall.Read (inline)
         0     0% 78.39%      2.08s  6.39%  syscall.Write (inline)
         0     0% 78.39%      0.80s  2.46%  syscall.read
         0     0% 78.39%      2.08s  6.39%  syscall.write
         0     0% 78.39%      0.27s  0.83%  time.runtimeNow
         0     0% 78.39%      2.43s  7.46%  tradr-backfiller-relay/grpc.(*Handler).HandleCreateRecord
         0     0% 78.39%      0.54s  1.66%  tradr-backfiller-relay/relay.(*Relay).RunRelay
         0     0% 78.39%      3.63s 11.15%  tradr-backfiller-relay/relay.(*Relay).RunRelay.func1
         0     0% 78.39%      2.43s  7.46%  tradr-backfiller-relay/relay.(*Relay).handleCreateOrUpdate
